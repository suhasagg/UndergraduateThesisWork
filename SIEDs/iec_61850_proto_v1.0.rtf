{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f37\froman\fcharset238\fprq2 Times New Roman CE;}{\f38\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f40\froman\fcharset161\fprq2 Times New Roman Greek;}{\f41\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f42\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f43\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f44\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f45\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\f47\fswiss\fcharset238\fprq2 Arial CE;}{\f48\fswiss\fcharset204\fprq2 Arial Cyr;}{\f50\fswiss\fcharset161\fprq2 Arial Greek;}{\f51\fswiss\fcharset162\fprq2 Arial Tur;}{\f52\fswiss\fcharset177\fprq2 Arial (Hebrew);}
{\f53\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f54\fswiss\fcharset186\fprq2 Arial Baltic;}{\f55\fswiss\fcharset163\fprq2 Arial (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;
\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;
\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\rsidtbl \rsid4134681\rsid5052872
\rsid12197837\rsid15228641}{\*\generator Microsoft Word 11.0.6568;}{\info{\author suhas}{\operator suhas}{\creatim\yr2007\mo12\dy28\hr7\min20}{\revtim\yr2007\mo12\dy29\hr3\min31}{\version5}{\edmins16}{\nofpages5}{\nofwords1130}{\nofchars6443}
{\*\company IIT}{\nofcharsws7558}{\vern24579}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind4\viewscale100\nolnhtadjtbl\rsidroot5052872 \fet0\sectd \linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3
\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}
{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain 
\ql \li2070\ri0\nowidctlpar\tx900\faauto\rin0\lin2070\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid15228641                                     Modelling Of IEC 61850 Prototype-version 1.0
\par 
\par                                          }{\f1\fs20\insrsid5052872 \'a9}{\f1\fs20\insrsid12197837  }{\f1\fs20\insrsid5052872 Suhas Aggarwal (suhas@iitg.ernet.in) 
\par 
\par 
\par                                            }{\f1\fs20\insrsid15228641   INFORMATION MODEL HIERARCHY
\par                                            -------------------------------------------------------
\par 
\par }\pard \ql \li2700\ri0\nowidctlpar\tx900\faauto\rin0\lin2700\itap0 {\f1\fs20\insrsid15228641                                                 IEC 61850 server
\par                                                        |
\par                                                      Logical 
\par                                                      Device 
\par                                                  /      |      \\                                   
\par                                      }{\f1\fs20\insrsid4134681       LLN0  }{\f1\fs20\insrsid15228641  LPHD   Logical Nodes
\par                                                                   }{\f1\fs20\insrsid5052872         }{\f1\fs20\insrsid15228641   |
\par                                                                   }{\f1\fs20\insrsid5052872       }{\f1\fs20\insrsid15228641  Data  
\par }\pard \ql \li2700\ri0\nowidctlpar\tx900\tx4590\faauto\rin0\lin2700\itap0\pararsid5052872 {\f1\fs20\insrsid15228641                                                                    }{\f1\fs20\insrsid5052872         }{\f1\fs20\insrsid15228641  |
\par }\pard \ql \li2700\ri0\nowidctlpar\tx900\faauto\rin0\lin2700\itap0 {\f1\fs20\insrsid15228641                                                                    Data Attributes
\par }\pard \ql \li1980\ri0\nowidctlpar\tx900\faauto\rin0\lin1980\itap0 {\f1\fs20\insrsid15228641                                      
\par }\pard \ql \li2880\ri0\nowidctlpar\tx900\faauto\rin0\lin2880\itap0 {\f1\fs20\insrsid15228641 
\par                                               Server Model
\par                                              ---------------------                                  
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid15228641               
\par     Implementation Layout-
\par                                                
\par   1)Structure for data attribute-             
\par   Components-
\par   Name,Type,Trigger Option,Functional Constraint,M/O/C  
\par   Types supported -
\par   1)Primitive
\par   2)Composite
\par   Unions for implementing Type variable
\par 
\par   2)Structure for data-
\par   Components-
\par   Name,array of data attributes
\par   
\par   3)Structure for Logical Nodes-
\par   Components-
\par }\pard \ql \fi-270\li270\ri0\nowidctlpar\faauto\rin0\lin270\itap0 {\f1\fs20\insrsid15228641   Name,array of data,array of data set,array of buffered report control block,array of unbuffered report control block,array of log control block
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid15228641 
\par   4)Structure for Logical device-
\par   Array of logical nodes + object for LLN0 + object for LPHD 
\par 
\par   5)Structure for IEC 61850 server-
\par   Array of Logical Device
\par 
\par 
\par   Global array of type Data -
\par   prefeeded-will serve the need of common data classes 
\par   can be used for creating data of type common data class
\par 
\par   Global array of type Data attribute -
\par   prefeeded with common data attributes 
\par   can be used for composing data
\par    
\par   In the main function -
\par   1)Array of Data attributes
\par   2)Array of Data
\par   3)Array of Data Sets
\par   4)Array of Logical Nodes
\par   5)Array of Logical Devices
\par                                  
\par  
\par  These arrays can be initialised by user at runtime while building IEC 61850 server for a physical device
\par 
\par                                                                                           
\par                                                                                           Client Model 
\par                                                                                           -------------------
\par 
\par Client can form two party application association with the server and can issue commands corresponding to various services-
\par  
\par Service model-
\par 
\par services which will be supported-
\par 
\par server model-
\par Getserverdirectory
\par 
\par logical device model-
\par Get logicaldevice directory
\par 
\par logical node model-
\par Get logicalnode directory
\par Get alldata values
\par 
\par data model-
\par get datavalues
\par set data values
\par get data directory
\par get data definition
\par 
\par data set model-
\par get data set values
\par set data set values
\par create data set
\par delete data set
\par get dataset directory
\par 
\par These services will be listed in the client interface. 
\par 
\par Clients can choose these services to perform corresponding actions
\par Services will be implemented using functions which accept proper arguments according to the format specified in the document 
\par 
\par Modelling of buffered report control block -
\par -------------------------------------------------------------
\par 
\par               report control block
\par               |                    \\
\par               |                     \\
\par transmission<--report     event handler
\par            }{\f1\fs20\insrsid5052872      }{\f1\fs20\insrsid15228641   generation  
\par 
\par array of structures for report control block
\par present in each logical node
\par 
\par client can form association with report control block and set its values 
\par 
\par if the client has set rpt enable to true
\par           | 
\par in case there is change in data values of data sets being monitored
\par           |
\par changes will start collecting in the buffer for buffer time specified upto buffer limit
\par           |
\par when buffer time expires
\par           |
\par report will be generated and sent to the client
\par 
\par Implementation of report control block-
\par 
\par structure will contain parameters/component specified in the document
\par 
\par if
\par RptEna=true
\par |
\par in case any service causes change in data value being monitored
\par |
\par data copied to buffer
\par 
\par buffer implementation -
\par using multiple arrays which grow simultaneously
\par 
\par array1         array2
\par data value    corresponding time stamps
\par 
\par after buffer time expires contents copied to report
\par 
\par Report implemented using structures-
\par at time of report generation components of structure will be initialised
\par |                                                                    }{\f1\fs20\insrsid5052872                                 }{\f1\fs20\insrsid15228641 |
\par taking some values from buffered report control block            data values from buffer   
\par                                                                      |
\par                                                                  after this buffer flushed out
\par                                                                      |
\par                                                                  entire array set to zero
\par 
\par 
\par 
\par Modelling of log
\par -------------------------
\par 
\par logs-Implemented using circular buffer
\par 
\par one log per logical device
\par or can have central log for multiple logical devices in server
\par 
\par 
\par log control block
\par |
\par event monitor
\par |
\par log handler
\par |
\par contents copied to log
\par 
\par log control block implemented using structures
\par |
\par components initialised by clients using two party application association
\par 
\par in case any event occurs,log entries are created in proper format
\par log implemented using structure with components described in the format specified in the document
\par 
\par entry data\{1..n\} field-
\par circular buffer format-
\par multiple arrays growing simultaneously
\par if entries exceed array size--arrays are left shifted simultaneosly to pop out the oldest log entry stored in the beginning and contents are copied in the last index.
\par 
\par services supported-
\par querying log by time
\par query log}{\f1\fs20\insrsid5052872  }{\f1\fs20\insrsid15228641 after
\par get log status value
\par 
\par Implemented using Functions
\par 
\par 
\par Modelling of LLNO
\par ----------------------------
\par 
\par 1)SETTING GROUP CONTROL BLOCKS
\par --------------------------------------------------------------
\par 
\par --->-------------------------------------
\par     --|---|---|---|---|---|---|---|---|--1
\par     --|---|---|---|---|---|---|---|---|--2
\par --->-------------------------------------3
\par  
\par  
\par Implemented using 2-d arrays 
\par pointer to active group array
\par pointer to edit group array
\par | 
\par copy the contents of this array to edit buffer 
\par |
\par on confirmation
\par |
\par copy the contents back to the edit group
\par 
\par reset the edit group pointer 
\par 
\par array pointed by active pointer can be used to set the contents of setting data
\par 
\par 
\par Network Interface
\par ---------------------------
\par Server Code Implementation
\par Client Code Implementation
\par 
\par Interaction will be via stream sockets to send and receive data.
\par Clients will be able to issue service commands.
\par Server on receiving the appropriate service code will perform necessary action of editing data in its database or transmitting DATA/LOG/REPORT for display on client interface.
\par 
\par Some advanced features
\par ------------------------------------
\par MODELLING OF GSSE/GOOSE/UNICAST/MULTICAST SAMPLED VALUE CONTROL BLOCKS 
\par REPORT FRAGMENTATION
\par GI/INTEGRITY SCANS IN REPORTS
\par INTEGRITY SCANS IN LOGS
\par 
\par 
\par 
\par 
\par 
\par }}